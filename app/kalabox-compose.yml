#
# Kalabox Magento compose file
#
# This contains the core service definitions to run Magento on Kalabox. This
# is a docker-compose file so please check out the compose file documentation
# over at https://docs.docker.com/compose/compose-file/.
#
# There are, however, a few caveats to take into account kalabox-compose.ymls
#
#   1. It is probably a bad idea to use the `container_name` key.
#
#   2. You can run `kbox env` inside of your app for a list of environmental
#      variables that you can use inside of this compose file.
#
#   3. Ports need to be exposed to the host on the outside using
#
#      ports:
#       - "PORTNUMBER"
#
#      Otherwise they are not usable in the services plugin.
#
#    4. The config directory in your app root contains a lot of
#       service config that is shared into each service. This is all
#       editable directly and should take on a `kbox restart`.
#

#
# This defines a data container to share common app assets such as:
#
#   1. /media - Magento's media dir is here
#
#   2. /var/lib/mysql - MySQL databases to preserve data on rebuilds
#
#   3. /var/www/html - Your applications codebase, also where you shared code lives
#
data:

  # Comment this and uncomment 'build' below if you want to edit your
  # local dockerfile and build from there. This is useful for development
  image: tianon/true

  # Uncomment this and comment 'image' above if you want to edit your
  # local dockerfile and build from there. This is useful for development
  #
  # build: ./dockerfiles/data

  volumes:
    - /srv/www
    - $KALABOX_APP_ROOT_BIND/files:/srv/www/$KALABOX_APP_PHP_CONFIG_FILEMOUNT

dbdata:
  image: tianon/true
  volumes:
    - /var/lib/mysql

#
# This defines a Magento appserver on nginx and php-fpm.
#
# The $KALABOX_APP_PHP_CONFIG_VERSION var should contain the Mage version
#
#
appserver:

  # Comment this and uncomment 'build' below if you want to edit your
  # local dockerfile and build from there. This is useful for development
  image: $KALABOX_APP_PHP_CONFIG_IMAGE

  # Uncomment this and comment 'image' above if you want to edit your
  # local dockerfile and build from there. This is useful for development
  #
  # build: ./dockerfiles/${KALABOX_APP_PHP_CONFIG_FRAMEWORK}${KALABOX_APP_PHP_CONFIG_VERSION}

  hostname: $KALABOX_APP_CONFIG_NAME.$KALABOX_APP_CONFIG_DOMAIN
  #volumes:
  #  - $KALABOX_APP_ROOT_BIND/config/apache/apache2-foreground:/usr/local/bin/apache2-foreground
  environment:
    FRAMEWORK: $KALABOX_APP_PHP_CONFIG_FRAMEWORK
    KALABOX_UID: $KALABOX_ENGINE_ID
    KALABOX_GID: $KALABOX_ENGINE_GID
  volumes_from:
    - data
  links:
    - db
    - phpfpm
  ports:
    - "8000:80"


phpfpm:
  image: mageinferno/magento2-php:7.0.8-fpm-3
  links:
    - db
  volumes_from:
    - data

#
# This defines a basic database server.
#
db:

  # Comment this and uncomment 'build' below if you want to edit your
  # local dockerfile and build from there. This is useful for development
  image: mysql:5.6

  # Uncomment this and comment 'image' above if you want to edit your
  # local dockerfile and build from there. This is useful for development
  #
  # build: ./dockerfiles/db

  volumes_from:
    - dbdata
  ports:
    - "3306"
  environment:
    MYSQL_USER: $KALABOX_APP_PHP_CONFIG_FRAMEWORK
    MYSQL_PASSWORD: $KALABOX_APP_PHP_CONFIG_FRAMEWORK
    MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    MYSQL_DATABASE: $KALABOX_APP_PHP_CONFIG_FRAMEWORK


setup:
  image: mageinferno/magento2-php:7.0.8-fpm-3
  command: /usr/local/bin/mage-setup
  links:
    - db
  volumes_from:
    - data
  environment:
    - M2SETUP_DB_HOST=db
    - M2SETUP_DB_NAME=magento2
    - M2SETUP_DB_USER=magento2
    - M2SETUP_DB_PASSWORD=magento2
    - M2SETUP_BASE_URL=http://$KALABOX_APP_CONFIG_NAME.$KALABOX_APP_CONFIG_DOMAIN/
    - M2SETUP_ADMIN_FIRSTNAME=Admin
    - M2SETUP_ADMIN_LASTNAME=User
    - M2SETUP_ADMIN_EMAIL=dummy@gmail.com
    - M2SETUP_ADMIN_USER=magento2
    - M2SETUP_ADMIN_PASSWORD=magento2
    - M2SETUP_VERSION=$KALABOX_APP_PHP_CONFIG_VERSION
    - M2SETUP_USE_SAMPLE_DATA=false
    - M2SETUP_USE_ARCHIVE=true
